name: CI Checks

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        platform: [
          ubuntu-latest,
          macos-latest,
          windows-latest,
          ]
        toolchain: [
          stable,
          beta,
          1.63.0, # Our MSRV
          ]
        include:
          - toolchain: stable
            check-fmt: true
            platform: ubuntu-latest
          - toolchain: stable
            platform: macos-latest
          - toolchain: stable
            platform: windows-latest
          - toolchain: 1.63.0
            msrv: true
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install Rust ${{ matrix.toolchain }} toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal --default-toolchain ${{ matrix.toolchain }}
          rustup override set ${{ matrix.toolchain }}
      - name: Check formatting on Rust ${{ matrix.toolchain }}
        if: matrix.check-fmt
        run: rustup component add rustfmt && cargo fmt --all -- --check
      - name: Set RUSTFLAGS to deny warnings
        if: "matrix.toolchain == 'stable'"
        run: echo "RUSTFLAGS=-D warnings" >> "$GITHUB_ENV"
      - name: Build on Rust ${{ matrix.toolchain }}
        if: "matrix.platform != 'windows-latest'"
        run: |
          #cargo build --verbose --color always --features sqlite
          cargo build --verbose --color always --features sqlite-bundled
          #cargo build --verbose --color always --features sqlite-sqlcipher
          cargo build --verbose --color always --features sqlite-bundled-sqlcipher
      - name: Build on Rust ${{ matrix.toolchain }}
        if: "matrix.platform == 'windows-latest'"
        run: |
          cargo build --verbose --color always --features sqlite-bundled-windows
      - name: Build documentation on Rust ${{ matrix.toolchain }}
        run: |
          cargo doc --release --verbose --color always
          cargo doc --document-private-items --verbose --color always
      - name: Check release build on Rust ${{ matrix.toolchain }}
        if: "matrix.platform != 'windows-latest'"
        run: |
          #cargo check --release --verbose --color always --features sqlite
          cargo check --release --verbose --color always --features sqlite-bundled
          #cargo check --release --verbose --color always --features sqlite-sqlcipher
          cargo check --release --verbose --color always --features sqlite-bundled-sqlcipher
      - name: Check release build on Rust ${{ matrix.toolchain }}
        if: "matrix.platform == 'windows-latest'"
        run: |
          cargo check --release --verbose --color always --features sqlite-bundled-windows
      - name: Test on Rust ${{ matrix.toolchain }}
        if: "matrix.platform != 'windows-latest'"
        run: |
          #cargo test --verbose --color always --features sqlite
          cargo test --verbose --color always --features sqlite-bundled
          #cargo test --verbose --color always --features sqlite-sqlcipher
          cargo test --verbose --color always --features sqlite-bundled-sqlcipher
      - name: Test on Rust ${{ matrix.toolchain }}
        if: "matrix.platform == 'windows-latest'"
        run: |
          cargo test --verbose --color always --features sqlite-bundled-windows
